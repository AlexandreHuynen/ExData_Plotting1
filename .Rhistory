cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
?n
?n_distinct
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
?mutate
submit()
submit
submit()
?filter
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class , count, -grade)
res
?separate
separate(data = res, col = sex_class, into = c("sex","class"))
submit()
students3
submit()
?spread
submit()
submit()
submit()
library(readr)
parse_number("class5")
submit()
?mutate
submit()
submit()
submit()
reset()
swirl()
submit()
/parse_number
?parse_number
parse_number("class4")
?mutate
reset()
swirl()
submit()
submit()
submit()
students3
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>%
mutate(class = parse_number(class))
submit()
students4
submit()
?unique
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
?bind_rows
bind_rows(passed,failed)
sat
?select
?contains
?gather
?separate
sat %>%
select(-contains("total")) %>%
gather(key = part_sex, value = count, -score_range) %>%
print
sat %>%
select(-contains("total")) %>%
gather(key = part_sex, value = count, -score_range) %>%
separate(part_sex, c("part", "sex")) %>%
print
submit()
?group_by
submit()
q()
?hist
?rug
?abline
?table
?boxplot
?par
?with
?data
library(datasets)
hist(airquality$Ozone)
with(airquality,plot(Wind,Ozone))
ls()
boxplot(Ozone ~ Mont, airquality)
boxplot(Ozone ~ Month, airquality)
str(airquality)
boxplot(Temp ~ Month, airquality)
boxplot(Temp ~ Wind, airquality)
boxplot(Temp ~ Day, airquality)
boxplot(Ozone ~ Day, airquality)
?transform
airquality$Month <- factor(airquality$Month)
boxplot(Ozone ~ Month, airquality)
str(airquality)
library(swirl)
ls
ls()
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
swirl()
head(airquality)
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in NY City")
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in NY City"))
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "blue"))
with(subset(airquality, Month == 6), points(Wind, Ozone, col = "red"))
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in NY City"), type = "n")
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in NY City"), type = "n")
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in NY City"), type = "n")
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "blue"))
with(subset(airquality, Month != 5), points(Wind, Ozone, col = "red"))
str(airquality)
View(email_admin)
?scatter.smooth
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in NY City"), type = "n")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
?quartz
?Devices
install.packages(c("backports", "chron", "rprojroot"))
library(datasets)
with(faithful,plot(eruptions, waiting))
swirl()
dev.cur()
swirl()
head(pollution)
dim(pollution)
summary(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12)
abline(v = 12, lwd = 2)
abline(v = median(ppm), lwd = 4, col = "magenta")
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25~region, data = pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution, pollution$region == "east")
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution, region == "est")
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "Est")
plot(east$latitude, east$pm25, main = "East")
?par
swirl()
?Devices
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file = "myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red", main = "Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, airquality$Month == 5)
may <- subset(airquality, Month == 5)
points(may$Wind, may$Ozone, pch = 17, col = "blue")
points(may$Wind,may$Ozone,col="blue",pch=17)
nomay <- subset(airquality, Month != 5)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright", pch = c(17,8), col = c("blue", "red"), c("May","Other Months"))
legend("topright", pch = c(17,8), col = c("blue", "red"), legend = c("May","Other Months"))
?line
?abline
abline(v = median(airquality$Wind), lty = 2, width = 2)
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, maint = "Ozone and Wind")
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
fileUrl = "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
if (!file.exists("data")){ dir.create("data") }
download.file(fileUrl, destfile = "./data/dataUCI.csv", method = "curl")
dataUCI <- read.csv("./data/dataUCI.csv")
setwd("~/Coursera/01 - Data Science/[R]/03 - Exploratory Data Analysis/Week1/ExData_Plotting1")
getwd
getwd()
?if
)
?read.table
ls()
?ls
?dir
dir()
file.exists("plot1.R")
file.exists("figure")
file.exists("./figure/unnamed-chunk-2.png")
file.exists("./figure/unnamed-chunk-6.png")
dir()
dir(recursive = TRUE)
filename <- "household_power_consumption.txt"
listfile <- dir(pattern = filename, recursive = TRUE)
listfile
is.null(listfile)
size(listfile)
dim(listfile)
dim(listfile) > 0
length(listfile)
data <- read.table(file, header = TRUE, sep = ";")
data <- read.table(file, header = TRUE, sep = ";")
filename <- "household_power_consumption.txt"
listfile <- dir(pattern = filename, recursive = TRUE)
if(length(listfile) == 0){
fileUrl <- "https://d396qusza40orc.cloudfront.net/
exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl, filename, method = "curl")
}
download.file(fileUrl, filename, method = "curl")
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl, filename, method = "curl")
filename <- "household_power_consumption.txt"
listfile <- dir(pattern = filename, recursive = TRUE)
listfile
?dir
filename <- "household_power_consumption.txt"
listfile <- dir(pattern = filename, recursive = TRUE)
if(length(listfile) == 0){
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl, filename, method = "curl")
data <- read.table(filename, header = TRUE, sep = ";")
} else {
data <- read.table(listfile, header = TRUE, sep = ";")
}
listfile
listfile[1]
filename <- "household_power_consumption.txt"
listfile <- dir(pattern = filename, recursive = TRUE)
if(length(listfile) == 0){
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl, filename, method = "curl")
data <- read.table(filename, header = TRUE, sep = ";")
} else {
data <- read.table(listfile, header = TRUE, sep = ";")
}
?read.table
data <- read.table(file = datafile, header = TRUE, sep = ";")
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";")
getwd()
dir()
data <- read.table(file = datafile, header = TRUE, sep = ";", dec = ".")
data <- read.table(listfile, header = TRUE, sep = ";", dec = ".")
filename <- "household_power_consumption.txt"
datafile <- dir(pattern = filename, recursive = TRUE)
if(length(datafile) == 0){
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl, datafile, method = "curl")
data <- read.table(file = datafile, header = TRUE, sep = ";", dec = ".")
} else {
data <- read.table(datafile, header = TRUE, sep = ";", dec = ".")
}
listfile <- dir(pattern = filename, recursive = TRUE)
filename <- "household_power_consumption.txt"
datafile <- dir(pattern = filename, recursive = TRUE)
if(length(datafile) == 0){
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl, filename, method = "curl")
data <- read.table(file = filename, header = TRUE, sep = ";", dec = ".")
} else {
data <- read.table(datafile, header = TRUE, sep = ";", dec = ".")
}
data <- read.table(file = filename, header = TRUE, sep = ";", dec = ".", stringsAsFactors=FALSE)
data <- read.table(filename, header = TRUE, sep = ";", dec = ".", stringsAsFactors=FALSE)
data <- read.table(filename, header = TRUE, sep = ";")
data <- read.table(filename, header = TRUE, sep = ";")
data <- read.table(filename, header = TRUE, sep = ";", fileEncoding = "UTF16LE")
data <- read.table(filename, header = TRUE, sep = ";", fileEncoding = "UCS-2LE")
dir(pattern = filename, recursive = TRUE)
?unz
filename <- "household_power_consumption.txt"
datafile <- dir(pattern = filename, recursive = TRUE)
if(length(datafile) == 0){
temp <- tempfile()
fileUrl <- "https://d396qusza40orc.cloudfront.net/
exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl, temp, method = "curl")
data <- read.table(unz(temp, filename))
unlink(temp)
data <- read.table(file = filename, header = TRUE, sep = ";", dec = ".")
} else {
data <- read.table(datafile, header = TRUE, sep = ";", dec = ".")
}
filename <- "household_power_consumption.txt"
datafile <- dir(pattern = filename, recursive = TRUE)
if(length(datafile) == 0){
temp <- tempfile()
fileUrl <- "https://d396qusza40orc.cloudfront.net/
exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl, temp, method = "curl")
data <- read.table(unz(temp, filename))
unlink(temp)
# data <- read.table(file = filename, header = TRUE, sep = ";", dec = ".")
} else {
data <- read.table(datafile, header = TRUE, sep = ";", dec = ".")
}
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl, temp, method = "curl")
data <- read.table(unz(temp, filename))
unlink(temp)
temp
?unzip
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl, "X.zip", method = "curl")
unz("X.zip", filename)
unz("X.zip")
?unz
unzip("X.zip")
data <- read.table(unzip("X.zip"))
View(data)
filename <- "household_power_consumption.txt"
datafile <- dir(pattern = filename, recursive = TRUE)
if(length(datafile) == 0){
temp <- tempfile()
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl, temp, method = "curl")
data <- read.table(unzip("X.zip"), header = TRUE, sep = ";", dec = ".")
unlink(temp)
} else {
data <- read.table(datafile, header = TRUE, sep = ";", dec = ".")
}
View(data)
filename <- "household_power_consumption.txt"
datafile <- dir(pattern = filename, recursive = TRUE)
if(length(datafile) == 0){
temp <- tempfile()
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl, temp, method = "curl")
data <- read.table(unzip("X.zip"), header = TRUE, sep = ";", dec = ".")
unlink(temp)
} else {
data <- read.table(datafile, header = TRUE, sep = ";", dec = ".")
}
filename <- "household_power_consumption.txt"
datafile <- dir(pattern = filename, recursive = TRUE)
if(length(datafile) == 0){
temp <- tempfile()
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl, temp, method = "curl")
data <- read.table(unzip(temp), header = TRUE, sep = ";", dec = ".")
unlink(temp)
} else {
data <- read.table(datafile, header = TRUE, sep = ";", dec = ".")
}
filename <- "household_power_consumption.txt"
datafile <- dir(pattern = filename, recursive = TRUE)
if(length(datafile) == 0){
temp <- tempfile()
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl, temp, method = "curl")
data <- read.table(unzip(temp), header = TRUE, sep = ";", dec = ".")
unlink(temp)
} else {
data <- read.table(datafile, header = TRUE, sep = ";", dec = ".")
}
head(data)
str(data)
?as.Date
?transform
data$Date <- as.Date(data$Date,  format="%d/%m/%Y")
str(data)
?read.table
?strptime
View(data)
t <- subset(data, Date == "2007-02-01" | Date == "2007-02-02")
View(t)
t <- subset(data$Global_active_power, Date == "2007-02-01" | Date == "2007-02-02")
t <- subset(data$Global_active_power, data$Date == "2007-02-01" | data$Date == "2007-02-02")
datasub <- subset(data$Global_active_power,
data$Date == "2007-02-01" | data$Date == "2007-02-02") %>%
as.numeric
datasub <- subset(data$Global_active_power,
data$Date == "2007-02-01" | data$Date == "2007-02-02")
str(datasub)
actpow <- as.numeric(actpow)
actpow <- subset(data$Global_active_power,
data$Date == "2007-02-01" | data$Date == "2007-02-02")
actpow <- as.numeric(actpow)
datasub <- subset(data, Date == "2007-02-01" | Date == "2007-02-02")
actpow <- as.numeric(datasub$Global_active_power)
str(actpow)
hist(actpow, main = "Global Active Power", col = "red",
xlab = "Global Active Power (kilowatts)")
par(mfrow)
?par
hist(actpow, main = "Global Active Power", col = "red",
xlab = "Global Active Power (kilowatts)")
hist(actpow, main = "Global Active Power", col = "red",
xlab = "Global Active Power (kilowatts)")
hist(actpow, main = "Global Active Power", col = "red",
xlab = "Global Active Power (kilowatts)")
?par
par()
dev.off()
hist(actpow, main = "Global Active Power", col = "red",
xlab = "Global Active Power (kilowatts)")
?cat
?paste
paste("https://d396qusza40orc.cloudfront.net/",
"exdata%2Fdata%2Fhousehold_power_consumption.zip")
paste("https://d396qusza40orc.cloudfront.net/",
"exdata%2Fdata%2Fhousehold_power_consumption.zip", sep = "")
filename <- "household_power_consumption.txt"
filename <- "household_power_consumption.txt"
q()
